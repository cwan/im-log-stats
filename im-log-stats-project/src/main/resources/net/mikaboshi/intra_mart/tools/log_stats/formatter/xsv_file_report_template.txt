<#--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
  either express or implied. See the License for the specific language
  governing permissions and limitations under the License.
-->
<#--
  CSV/TSV共通のテンプレート
  @version 1.0.13
-->
<#--
  引数をダブルクートで囲い、" を "" に変換する。
-->
<#function esc s>
	<#if s??>
		<#return "\"" + s?replace("\"", "\"\"") + "\"">
	<#else>
		<#return "">
	</#if>
</#function>
<#if logFiles.transitionLogOnly>
	<#assign requestUrl="遷移先画面パス">
<#else>
	<#assign requestUrl="リクエストURL">
</#if>
${esc(reportName)}${separator}${generatedTime?string("yyyy-MM-dd HH:mm:ss")}${separator}${esc(signature)}${separator}${esc("Generated by im-log-stats " + projectVersion)}

期間別統計
#${separator}集計期間▲${separator}リクエスト数合計${separator}リクエスト処理時間の合計(ms)${separator}リクエスト処理時間の平均値(ms)${separator}リクエスト処理時間の最小値(ms)${separator}リクエスト処理時間の中央値(ms)${separator}リクエスト処理時間の90%Line(ms)${separator}リクエスト処理時間の最大値(ms)${separator}リクエスト処理時間の標準偏差(ms)${separator}ユニークユーザ数${separator}ユニークセッション数${separator}有効セッション数${separator}例外数合計${separator}画面遷移数合計${separator}画面遷移例外数合計<#if reportParameter.maxConcurrentRequest>${separator}最大同時リクエスト数</#if>
<#list timeSpanStat.list as row>
${(row_index + 1)?c}${separator}${row.startDate?string("yyyy-MM-dd HH:mm")} - ${row.endDate?string("HH:mm")}${separator}${row.requestCount?c}${separator}${row.pageTimeSum?c}${separator}${row.pageTimeAverage?c}${separator}${row.pageTimeMin?c}${separator}${row.pageTimeMedian?c}${separator}${row.pageTime90Percent?c}${separator}${row.pageTimeMax?c}${separator}${row.pageTimeStandardDeviation?c}${separator}${row.uniqueUserCount?c}${separator}${row.uniqueSessionCount?c}${separator}${row.activeSessionCount?c}${separator}${row.exceptionCount?c}${separator}${row.transitionCount?c}${separator}${row.transitionExceptionCount?c}<#if reportParameter.maxConcurrentRequest>${separator}${row.maxConcurrentRequestCount?c}</#if>
</#list>

リクエスト処理時間総合ランク${separator}<#if (reportParameter.requestPageTimeRankThresholdMillis < 0)>${requestPageTimeRank.size?c}<#else>${reportParameter.requestPageTimeRankThresholdMillis?c}ms以上</#if>/${requestPageTimeRank.requestCount?c}
#${separator}リクエストURL${separator}<#if reportParameter.jsspPath>JSSPページパス${separator}</#if>処理時間(ms)▼${separator}ログ出力日時${separator}セッションID${separator}ユーザID
<#list requestPageTimeRank.list as row>
${(row_index + 1)?c}${separator}${esc(row.requestUrl)}${separator}<#if reportParameter.jsspPath>${esc(row.jsspPath)}${separator}</#if>${row.requestPageTime?c}${separator}${row.date?string("yyyy-MM-dd HH:mm:ss.SSS")}${separator}${esc(row.sessionId)}${separator}${esc(row.userId)}
</#list>

${requestUrl}別・処理時間合計ランク${separator}${requestUrlRank.size?c}/${requestUrlRank.total?c}
#${separator}リクエストURL${separator}<#if reportParameter.jsspPath>JSSPページパス${separator}</#if>リクエスト回数${separator}処理時間合計(ms)▼${separator}処理時間平均(ms)${separator}処理時間最小値(ms)${separator}処理時間中央値(ms)${separator}処理時間90%Line(ms)${separator}処理時間最大値(ms)${separator}処理時間標準偏差(ms)${separator}リクエスト回数%${separator}処理時間%
<#list requestUrlRank.list as row>
${(row_index + 1)?c}${separator}${esc(row.url)}${separator}<#if reportParameter.jsspPath>${esc(row.jsspPath)}${separator}</#if>${row.count?c}${separator}${row.pageTimeSum?c}${separator}${row.pageTimeAverage?c}${separator}${row.pageTimeMin?c}${separator}${row.pageTimeMedian?c}${separator}${row.pageTime90Percent?c}${separator}${row.pageTimeMax?c}${separator}${row.pageTimeStandardDeviation?c}${separator}${row.countRate?c}%${separator}${row.pageTimeRate?c}%
</#list>

セッション別・処理時間合計ランク${separator}${sessionRank.size?c}/${sessionRank.total?c}
#${separator}セッションID${separator}ユーザID${separator}リクエスト回数${separator}処理時間合計(ms)▼${separator}処理時間平均(ms)${separator}処理時間最小値(ms)${separator}処理時間中央値(ms)${separator}処理時間90%Line(ms)${separator}処理時間最大値(ms)${separator}処理時間標準偏差(ms)${separator}リクエスト回数%${separator}処理時間%${separator}初回アクセス日時${separator}最終アクセス日時
<#list sessionRank.list as row>
${(row_index + 1)?c}${separator}${esc(row.sessionId)}${separator}${esc(row.userId)}${separator}${row.count?c}${separator}${row.pageTimeSum?c}${separator}${row.pageTimeAverage?c}${separator}${row.pageTimeMin?c}${separator}${row.pageTimeMedian?c}${separator}${row.pageTime90Percent?c}${separator}${row.pageTimeMax?c}${separator}${row.pageTimeStandardDeviation?c}${separator}${row.countRate?c}%${separator}${row.pageTimeRate?c}%${separator}<#if row.firstAccessTime??>${row.firstAccessTime?string("yyyy-MM-dd HH:mm:ss.SSS")}<#else>-</#if>${separator}<#if row.lastAccessTime??>${row.lastAccessTime?string("yyyy-MM-dd HH:mm:ss.SSS")}<#else>-</#if>
</#list>

例外
<#if parserParameter.exceptionGroupingByCause>
#${separator}<#if reportParameter.version.version7>レベル${separator}</#if>発端のCaused byの1行目${separator}回数▼
<#list exceptionList as row>
${(row_index + 1)?c}${separator}<#if reportParameter.version.version7>${esc(row.level)}${separator}</#if>${esc(row.groupingLineOfStackTrace)}${separator}${row.count?c}
</#list>
<#else>
#${separator}<#if reportParameter.version.version7>レベル${separator}</#if>メッセージ${separator}スタックトレース1行目${separator}回数▼
<#list exceptionList as row>
${(row_index + 1)?c}${separator}<#if reportParameter.version.version7>${esc(row.level)}${separator}</#if>${esc(row.message)}${separator}${esc(row.groupingLineOfStackTrace)}${separator}${row.count?c}
</#list>
</#if>

解析対象ログファイル
種類${separator}ファイルパス/個数
<#list logFiles.requestLogFiles as file>
リクエストログ${separator}${esc(file.absolutePath)}
</#list>
<#list logFiles.transitionLogFiles as file>
画面遷移ログ${separator}${esc(file.absolutePath)}
</#list>
エラーログ${separator}${logFiles.exceptionLogFiles?size?c}ファイル

レポートパラメータ
項目名${separator}値
バージョン${separator}${esc(parserParameter.version.getName())}
開始時刻${separator}<#if parserParameter.begin??>${parserParameter.begin?string("yyyy/MM/dd HH:mm")}<#else>-</#if>
終了時刻${separator}<#if parserParameter.end??>${parserParameter.end?string("yyyy/MM/dd HH:mm")}<#else>-</#if>
ログファイルの文字コード${separator}${esc(parserParameter.charset)}
リクエストログレイアウト${separator}${esc(parserParameter.requestLogLayout)}
画面遷移ログレイアウト${separator}${esc(parserParameter.transitionLogLayout)}
期間別統計の間隔${separator}${reportParameter.span?c}分
セッションタイムアウト時間${separator}${reportParameter.sessionTimeout?c}分
<#if (reportParameter.requestPageTimeRankThresholdMillis < 0)>
リクエスト処理時間ランクの出力件数${separator}${reportParameter.requestPageTimeRankSize?c}
<#else>
リクエスト処理時間ランクの閾値${separator}${reportParameter.requestPageTimeRankThresholdMillis?c}ミリ秒
</#if>
リクエストURLランクの出力件数${separator}${reportParameter.requestUrlRankSize?c}
セッションランクの出力件数${separator}${reportParameter.sessionRankSize?c}
例外のグルーピング方法${separator}<#if parserParameter.exceptionGroupingByCause>発端のCaused byの1行目<#else>メッセージ・スタックトレースの1行目</#if>
